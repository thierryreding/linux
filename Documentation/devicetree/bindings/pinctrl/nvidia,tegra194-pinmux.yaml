# SPDX-License-Identifier: (GPL-2.0+ OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pinctrl/nvidia,tegra194-pinmux.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVIDIA Tegra194 Pinmux Controller

maintainers:
  - Thierry Reding <thierry.reding@gmail.com>
  - Jon Hunter <jonathanh@nvidia.com>

properties:
  compatible:
    const: nvidia,tegra194-pinmux

  reg:
    items:
      - description: APB_MISC_GP_*_PADCTRL registers (pad control)
      - description: PINMUX_AUX_* registers (pinmux)

additionalProperties:
  description: |
    Tegra's pin configuration nodes act as containers for an arbitrary number of subnodes. Each of
    these subnodes represents some desired configuration for a pin, a group, or a list of pins or
    groups. This configuration can include the mux function to select on those pin(s)/group(s), and
    various pin configuration parameters, such as pull-up, tristate, drive strength, etc.

    The name of each subnode is not important; all subnodes should be enumerated and processed
    purely based on their content.

    Each subnode only affects those parameters that are explicitly listed. In other words, a
    subnode that lists a mux function but no pin configuration parameters implies no information
    about any pin configuration parameters. Similarly, a pin subnode that describes a pullup
    parameter implies no information about e.g. the mux function or tristate parameter. For this
    reason, even seemingly boolean values are actually tristates in this binding: unspecified, off,
    or on. Unspecified is represented as an absent property, and off/on are represented as integer
    values 0 and 1.

    See the TRM to determine which properties and values apply to each pin/group. Macro values for
    property values are defined in include/dt-binding/pinctrl/pinctrl-tegra.h.
  type: object
  patternProperties:
    "^[a-z0-9-_]+$":
      properties:
        nvidia,pins:
          description: An array of strings. Each string contains the name of a pin or group. Valid
            values for these names are listed below.

            Note that the pex_l5_clkreq_n_pgg0 and pex_l5_rst_n_pgg1 pins are part of PCIE C5
            power partition. Client devices must enable this partition before accessing the
            configuration for these pins.
          $ref: /schemas/types.yaml#/definitions/string-array
          items:
            enum: [ pex_l5_clkreq_n_pgg0, pex_l5_rst_n_pgg1,
                    # drive groups
                    drive_pex_l5_clkreq_n_pgg0, drive_pex_l5_rst_n_pgg1 ]

        nvidia,function:
          description: A string containing the name of the function to mux to the pin or group.
          $ref: /schemas/types.yaml#/definitions/string
          enum: [ pe5 ]

        nvidia,pull:
          description: Pull-down/up setting to apply to the pin.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: none
              const: 0
            - description: down
              const: 1
            - description: up
              const: 2

        nvidia,tristate:
          description: Tristate setting to apply to the pin.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: drive
              const: 0
            - description: tristate
              const: 1

        nvidia,enable-input:
          description: Enable the pin's input path.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: disable input (i.e. output only)
              const: 0
            - description: enable input
              const: 1

        nvidia,open-drain:
          description: Open-drain configuration for the pin.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: disable open-drain
              const: 0
            - description: enable open-drain
              const: 1

        nvidia,lock:
          description: Lock the pin configuration against further changes until reset.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: disable pin configuration lock
              const: 0
            - description: enable pin configuration lock
              const: 1

        nvidia,io-hv:
          description: Select high-voltage receivers.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: Use normal receivers.
              const: 0
            - description: Use high-voltage receivers.
              const: 1

        nvidia,schmitt:
          description: Enable Schmitt trigger on the input.
          $ref: /schemas/types.yaml#/definitions/uint32
          oneOf:
            - description: disable Schmitt trigger on the input
              const: 0
            - description: enable Schmitt trigger on the input
              const: 1

        nvidia,drive-type:
          description: Drive type to configure for the pin.
          $ref: /schemas/types.yaml#/definitions/uint32
          enum: [ 0, 1, 2, 3 ]

        nvidia,pull-down-strength:
          description: Controls drive strength. 0 is weakest. The range of valid values depends on
            the pingroup. See "CAL_DRVDN" in the Tegra TRM.
          $ref: /schemas/types.yaml#/definitions/uint32

        nvidia,pull-up-strength:
          description: Controls drive strength. 0 is weakest. The range of valid values depends on
            the pingroup. See "CAL_DRVUP" in the Tegra TRM.
          $ref: /schemas/types.yaml#/definitions/uint32

      additionalProperties: false

      required:
        - nvidia,pins

required:
  - compatible
  - reg

examples:
  - |
    #include <dt-bindings/pinctrl/pinctrl-tegra.h>

    pinmux@2430000 {
        compatible = "nvidia,tegra194-pinmux";
        reg = <0x2430000 0x17000>,
              <0xc300000 0x04000>;

        pinctrl-names = "pex_rst";
        pinctrl-0 = <&pex_rst_c5_out_state>;

        pex_rst_c5_out_state: pex_rst_c5_out {
            pex_rst {
                nvidia,pins = "pex_l5_rst_n_pgg1";
                nvidia,schmitt = <TEGRA_PIN_DISABLE>;
                nvidia,enable-input = <TEGRA_PIN_DISABLE>;
                nvidia,io-hv = <TEGRA_PIN_ENABLE>;
                nvidia,tristate = <TEGRA_PIN_DISABLE>;
                nvidia,pull = <TEGRA_PIN_PULL_NONE>;
            };
        };
    };
