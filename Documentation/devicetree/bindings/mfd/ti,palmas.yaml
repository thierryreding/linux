# SPDX-License-Identifier: GPL-2.0-only
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/ti,palmas.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Texas Instruments Palmas family of Power-Management ICs

maintainers:
  - Lee Jones <lee.jones@linaro.org>

properties:
  compatible:
    items:
      - enum:
          - ti,twl6035
          - ti,twl6036
          - ti,twl6037
          - ti,tps65913
          - ti,tps65914
          - ti,tps80036
          - ti,tps659038
          - ti,tps65917
      - const: ti,palmas

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  interrupt-controller:
    description: The Palmas chip has its own internal IRQs.

  "#interrupt-cells":
    description: The first cell is the IRQ number and the second cell is the flags, encoded as the
      trigger mask from ../interrupt-controller/interrupts.txt.
    const: 2

  pinctrl-names: true

  ti,mux-pad1:
    $ref: /schemas/types.yaml#/definitions/uint32
    description: Set the pad register 1 to the correct muxing for the hardware. Otherwise the
     muxing will be obtained from OTP.

  ti,mux-pad2:
    $ref: /schemas/types.yaml#/definitions/uint32
    description: Set the pad register 2 to the correct muxing for the hardware. Otherwise the
     muxing will be obtained from OTP.

  ti,power-ctrl:
    $ref: /schemas/types.yaml#/definitions/flag
    description: Specifies the value to program into the POWER_CTRL register.

  ti,system-power-controller:
    $ref: /schemas/types.yaml#/definitions/flag
    description: Specifies whether or not this PMIC is controlling the system power.

  ti,palmas-override-powerhold:
    $ref: /schemas/types.yaml#/definitions/flag
    description: This is applicable for PMICs for which GPIO7 is configured in POWERHOLD mode
      which has higher priority over DEV_ON bit and keeps the PMIC supplies on even after the
      DEV_ON bit is turned off. This property enables driver to over ride the POWERHOLD value to
      GPIO7 so as to turn off the PMIC in power off scenarios. So for GPIO7 if this property is
      set then the GPIO_7 field should never be muxed to anything else. It should be set to
      POWERHOLD by default and only in case of power off scenarios the driver will over ride the
      mux value.

patternProperties:
  "^(palmas_)?adc$":
    $ref: ../iio/adc/ti,palmas-gpadc.yaml

  "^(palmas_)?(clk32k|clk32kg|clk32kgaudio)$":
    $ref: ../clock/ti,palmas-clk32k.yaml

  "^(palmas_)?gpio$":
    $ref: ../gpio/ti,palmas-gpio.yaml

  "^(palmas_)?(pinctrl|pinmux)$":
    $ref: ../pinctrl/ti,palmas-pinctrl.yaml

  "^(palmas_)?pmic$":
    $ref: ../regulator/ti,palmas-pmic.yaml

  "^(palmas_)?pwrbutton$":
    $ref: ../input/ti,palmas-pwrbutton.yaml

  "^(palmas_)?rtc$":
    $ref: ../rtc/ti,palmas-rtc.yaml

  "^(palmas_)?usb$":
    $ref: ../extcon/ti,palmas-usb-vid.yaml

  "^pinctrl-[0-9]+$": true

additionalProperties: false

required:
  - compatible
  - reg
  - interrupt-controller
  - "#interrupt-cells"

examples:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>

    i2c {
      #address-cells = <1>;
      #size-cells = <0>;

      pmic@48 {
        compatible = "ti,twl6035", "ti,palmas";
        reg = <0x48>;
        interrupts = <16 IRQ_TYPE_LEVEL_LOW>;
        interrupt-parent = <&intc>;
        interrupt-controller;
        #interrupt-cells = <2>;

        ti,mux-pad1 = <0>;
        ti,mux-pad2 = <0>;

        pmic {
          compatible = "ti,twl6035-pmic", "ti,palmas-pmic";
        };
      };
    };
