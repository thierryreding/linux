# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/dma/nvidia,tegra20-apbdma.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVIDIA Tegra APB DMA controller

maintainers:
  - Thierry Reding <thierry.reding@gmail.com>
  - Jon Hunter <jonathanh@nvidia.com>

properties:
  compatible:
    oneOf:
      - enum:
          - nvidia,tegra20-apbdma
          - nvidia,tegra114-apbdma
          - nvidia,tegra148-apbdma

      - items:
          - const: nvidia,tegra30-apbdma
          - const: nvidia,tegra20-apbdma

      - items:
          - enum:
              - nvidia,tegra124-apbdma
              - nvidia,tegra210-apbdma
          - enum:
              - nvidia,tegra148-apbdma

  reg:
    description: Base address and length of the DMA controller registers. This should include all
      of the per-channel registers.
    maxItems: 1

  interrupts:
    minItems: 16
    maxItems: 32

  clocks:
    items:
      - description: module clock

  clock-names:
    items:
      - const: dma

  resets:
    items:
      - description: module reset

  reset-names:
    items:
      - const: dma

  "#dma-cells":
    description: This dictates the length of DMA specifiers in client nodes' dmas properties. The
      specifier represents the DMA request select value for the peripheral. For more details,
      consult the Tegra TRM's documentation of the APB DMA channel control register REQ_SEL field.
    const: 1

required:
  - compatible
  - reg
  - interrupts
  - clocks
  - resets
  - reset-names
  - "#dma-cells"

additionalProperties: false

examples:
  - |
    #include <dt-bindings/clock/tegra20-car.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    dma@6000a000 {
        compatible = "nvidia,tegra20-apbdma";
        reg = <0x6000a000 0x1200>;
        interrupts = <GIC_SPI 136 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 137 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 138 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 139 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 140 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 141 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 142 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 143 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 144 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 145 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 146 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 147 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 148 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 149 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 150 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 151 IRQ_TYPE_LEVEL_HIGH>;
        clocks = <&tegra_car TEGRA20_CLK_APBDMA>;
        resets = <&tegra_car 34>;
        reset-names = "dma";
        #dma-cells = <1>;
    };
