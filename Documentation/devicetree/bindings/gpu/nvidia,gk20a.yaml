# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/gpu/nvidia,gk20a.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVIDIA Tegra Graphics Processing Units

maintainers:
  - Thierry Reding <thierry.reding@gmail.com>
  - Jon Hunter <jonathanh@nvidia.com>

properties:
  compatible:
    items:
      - enum:
          - nvidia,gk20a
          - nvidia,gm20b
          - nvidia,gp10b
          - nvidia,gv11b

  reg:
    items:
      - description: base address and size for BAR0
      - description: base address and size for BAR1

  interrupts:
    items:
      - description: stalling interrupt
      - description: non-stalling interrupt

  interrupt-names:
    items:
      - const: stall
      - const: nonstall

  clocks:
    minItems: 2
    maxItems: 4
    items:
      - description: GPU clock
      - description: PWR clock
      - description: REF clock
      - description: FUSE clock

  clock-names:
    minItems: 2
    maxItems: 4
    items:
      - const: gpu
      - const: pwr
      - const: ref
      - const: fuse

  resets:
    items:
      - description: GPU reset

  reset-names:
    items:
      - const: gpu

  power-domains:
    description: GPUs that make use of power domains can define this property
      instead of vdd-supply. Currently "nvidia,gp10b" and "nvidia,gv11b" make
      use of this.
    maxItems: 1

  vdd-supply:
    description: GPU power supply.

  iommus:
    maxItems: 1

  interconnects:
    description: A list of phandle and specifier pairs that describe the
      interconnect paths to and from the GPU.
    $ref: "/schemas/types.yaml#/definitions/phandle-array"

  interconnect-names:
    description: One string for each pair of phandle and specifier in the
      "interconnects" property.
    $ref: "/schemas/types.yaml#/definitions/string-array"
    items:
      - const: dma-mem # read-0
      - const: write-0
      - const: read-1
      - const: write-1

required:
  - compatible
  - reg
  - interrupts
  - interrupt-names
  - clocks
  - clock-names
  - resets
  - reset-names

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: nvidia,gm20b
    then:
      required:
        - vdd-supply

  - if:
      properties:
        compatible:
          contains:
            const: nvidia,gm20b
    then:
      properties:
        clock-names:
          minItems: 3

      required:
        - vdd-supply

  - if:
      properties:
        compatible:
          contains:
            const: nvidia,gp10b
    then:
      required:
        - power-domains

unevaluatedProperties: false

examples:
  - |
    #include <dt-bindings/clock/tegra124-car.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/memory/tegra124-mc.h>

    gpu@57000000 {
        compatible = "nvidia,gk20a";
        reg = <0x57000000 0x01000000>,
              <0x58000000 0x01000000>;
        interrupts = <GIC_SPI 157 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 158 IRQ_TYPE_LEVEL_HIGH>;
        interrupt-names = "stall", "nonstall";
        vdd-supply = <&vdd_gpu>;
        clocks = <&tegra_car TEGRA124_CLK_GPU>,
                 <&tegra_car TEGRA124_CLK_PLL_P_OUT5>;
        clock-names = "gpu", "pwr";
        resets = <&tegra_car 184>;
        reset-names = "gpu";
        iommus = <&mc TEGRA_SWGROUP_GPU>;
    };

  - |
    #include <dt-bindings/clock/tegra210-car.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    /*
     * XXX can't include this because it conflicts with the tegra124-mc.h
     * include from the Tegra124 example above.
     */
    /*
    #include <dt-bindings/memory/tegra210-mc.h>
    */

    gpu@57000000 {
        compatible = "nvidia,gm20b";
        reg = <0x57000000 0x01000000>,
              <0x58000000 0x01000000>;
        interrupts = <GIC_SPI 157 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 158 IRQ_TYPE_LEVEL_HIGH>;
        interrupt-names = "stall", "nonstall";
        vdd-supply = <&vdd_gpu>;
        clocks = <&tegra_car TEGRA210_CLK_GPU>,
                 <&tegra_car TEGRA210_CLK_PLL_P_OUT5>,
                 <&tegra_car TEGRA210_CLK_PLL_G_REF>;
        clock-names = "gpu", "pwr", "ref";
        resets = <&tegra_car 184>;
        reset-names = "gpu";
        iommus = <&mc TEGRA_SWGROUP_GPU>;
    };

  - |
    #include <dt-bindings/clock/tegra186-clock.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/memory/tegra186-mc.h>
    #include <dt-bindings/power/tegra186-powergate.h>
    #include <dt-bindings/reset/tegra186-reset.h>

    gpu@17000000 {
        compatible = "nvidia,gp10b";
        reg = <0x17000000 0x1000000>,
              <0x18000000 0x1000000>;
        interrupts = <GIC_SPI 70 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>;
        interrupt-names = "stall", "nonstall";
        clocks = <&bpmp TEGRA186_CLK_GPCCLK>,
                 <&bpmp TEGRA186_CLK_GPU>;
        clock-names = "gpu", "pwr";
        resets = <&bpmp TEGRA186_RESET_GPU>;
        reset-names = "gpu";
        power-domains = <&bpmp TEGRA186_POWER_DOMAIN_GPU>;
        iommus = <&smmu TEGRA186_SID_GPU>;
    };

  - |
    #include <dt-bindings/clock/tegra194-clock.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/memory/tegra194-mc.h>
    #include <dt-bindings/power/tegra194-powergate.h>
    #include <dt-bindings/reset/tegra194-reset.h>

    gpu@17000000 {
        compatible = "nvidia,gv11b";
        reg = <0x17000000 0x10000000>,
              <0x18000000 0x10000000>;
        interrupts = <GIC_SPI 70 IRQ_TYPE_LEVEL_HIGH>,
                     <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>;
        interrupt-names = "stall", "nonstall";
        clocks = <&bpmp TEGRA194_CLK_GPCCLK>,
                 <&bpmp TEGRA194_CLK_GPU_PWR>,
                 <&bpmp TEGRA194_CLK_FUSE>;
        clock-names = "gpu", "pwr", "fuse";
        resets = <&bpmp TEGRA194_RESET_GPU>;
        reset-names = "gpu";
        dma-coherent;

        power-domains = <&bpmp TEGRA194_POWER_DOMAIN_GPU>;
        interconnects = <&mc TEGRA194_MEMORY_CLIENT_NVL1R &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL1RHP &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL1W &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL2R &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL2RHP &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL2W &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL3R &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL3RHP &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL3W &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL4R &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL4RHP &emc>,
                        <&mc TEGRA194_MEMORY_CLIENT_NVL4W &emc>;
        interconnect-names = "dma-mem", "read-0-hp", "write-0",
                             "read-1", "read-1-hp", "write-1",
                             "read-2", "read-2-hp", "write-2",
                             "read-3", "read-3-hp", "write-3";
    };
