# SPDX-Licens-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/mmc/nvidia,tegra20-sdhci.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVIDIA Tegra Secure Digital Host Controller

maintainers:
  - Thierry Reding <thierry.reding@gmail.com>
  - Jon Hunter <jonathanh@nvidia.com>

description: |
  This controller on Tegra family SoCs provides an interface for MMC, SD, and
  SDIO types of memory cards.

  This file documents differences between the core properties described by
  mmc-controller.yaml and the properties for the Tegra SDHCI controller.

properties:
  # required properties
  compatible:
    items:
      - enum:
          - nvidia,tegra20-sdhci # for Tegra20
          - nvidia,tegra30-sdhci # for Tegra30
          - nvidia,tegra114-sdhci # for Tegra114
          - nvidia,tegra124-sdhci # for Tegra124 and Tegra132
          - nvidia,tegra210-sdhci # for Tegra210
          - nvidia,tegra186-sdhci # for Tegra186
          - nvidia,tegra194-sdhci # for Tegra194

  clocks:
    items:
      - description: module clock

  resets:
    items:
      - description: module reset

  reset-names:
    items:
      - const: sdhci

  # optional properties
  power-gpios:
    description: specify GPIOs for power control

  interconnects:
    $ref: /schemas/types.yaml#/definitions/phandle-array
    description: A list of phandle and specifier pairs that describe the
      interconnect paths to and from the SDHCI controller.

  interconnect-names:
    $ref: /schemas/types.yaml#/definitions/non-unique-string-array
    description: One string for each pair of phandle and specifier in the
      "interconnects" property.
    # XXX We need at least one of these to be named dma-mem so that the core
    # will set the DMA mask based on the DMA parent, but all of these go to
    # the system memory eventually.
    items:
      - const: dma-mem
      - const: dma-mem

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: nvidia,tegra210-sdhci

    then:
      properties:
        pinctrl-names:
          $ref: /schemas/types.yaml#/definitions/string-array
          items:
            - const: sdmmc-3v3
              description: pad configuration for 3.3 V
            - const: sdmmc-1v8
              description: pad configuration for 1.8 V
            - const: sdmmc-3v3-drv
              description: pull-up/down configuration for 3.3 V
            - const: sdmmc-1v8-drv
              description: pull-up/down configuration for 1.8 V

  - if:
      properties:
        compatible:
          contains:
            anyOf:
              - const: nvidia,tegra186-sdhci
              - const: nvidia,tegra194-sdhci

    then:
      properties:
        pinctrl-names:
          $ref: /schemas/types.yaml#/definitions/string-array
          items:
            - const: sdmmc-3v3
              description: pad configuration for 3.3 V
            - const: sdmmc-1v8
              description: pad configuration for 1.8 V

  - if:
      properties:
        compatible:
          contains:
            anyOf:
              - const: nvidia,tegra210-sdhci
              - const: nvidia,tegra186-sdhci
              - const: nvidia,tegra194-sdhci

    then:
      properties:
        nvidia,only-1-8v:
          $ref: /schemas/types.yaml#/definitions/flag
          description: The presence of this property indicates that the
            controller operates at a 1.8 V fixed I/O voltage.

        nvidia,pad-autocal-pull-up-offset-3v3:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for 3.3 V
            signaling modes.

            The property values are drive codes which are programmed into the
            PD_OFFSET and PU_OFFSET sections of the SDHCI_TEGRA_AUTO_CAL_CONFIG
            register. A higher value corresponds to higher drive strength.
            Please refer to the reference manual of the SoC for correct values.
            The SDR104 and HS400 timing specific values are used in
            corresponding modes if specified.

        nvidia,pad-autocal-pull-down-offset-3v3:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for 3.3 V
            signaling modes.

        nvidia,pad-autocal-pull-up-offset-1v8:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for 1.8 V
            signaling modes.

        nvidia,pad-autocal-pull-down-offset-1v8:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for 1.8 V
            signaling modes.

        nvidia,pad-autocal-pull-up-offset-3v3-timeout:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength used as a fallback in case the
            automatic calibration times out on a 3.3 V signaling mode.

        nvidia,pad-autocal-pull-down-offset-3v3-timeout:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength used as a fallback in case the
            automatic calibration times out on a 3.3 V signaling mode.

        nvidia,pad-autocal-pull-up-offset-1v8-timeout:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength used as a fallback in case the
            automatic calibration times out on a 1.8 V signaling mode.

        nvidia,pad-autocal-pull-down-offset-1v8-timeout:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength used as a fallback in case the
            automatic calibration times out on a 1.8 V signaling mode.

        nvidia,pad-autocal-pull-up-offset-sdr104:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for SDR104
            mode.

        nvidia,pad-autocal-pull-down-offset-sdr104:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for SDR104
            mode.

        nvidia,pad-autocal-pull-up-offset-hs400:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for HS400
            mode.

        nvidia,pad-autocal-pull-down-offset-hs400:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify drive strength calibration offsets for HS400
            mode.

        nvidia,default-tap:
          $ref: /schemas/types.yaml#/definitions/uint32
          description: Specify the default inbound sampling clock trimmer
            value for non-tunable modes.

            The values are used for compensating trace length differences
            by adjusting the sampling point. The values are programmed to the
            Vendor Clock Control Register. Please refer to the reference
            manual of the SoC for correct values.

            The DQS trim values are only used on controllers which support
            HS400 timing. Only SDMMC4 on Tegra210 and Tegra186 supports
            HS400.

        nvidia,default-trim:
          description: Specify the default outbound clock trimmer value.

        nvidia,dqs-trim:
          description: Specify DQS trim value for HS400 timing.

required:
  - compatible
  - clocks
  - resets
  - reset-names

examples:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    sdhci@c8000200 {
        compatible = "nvidia,tegra20-sdhci";
        reg = <0xc8000200 0x200>;
        interrupts = <47>;
        clocks = <&tegra_car 14>;
        resets = <&tegra_car 14>;
        reset-names = "sdhci";
        cd-gpios = <&gpio 69 0>; /* gpio PI5 */
        wp-gpios = <&gpio 57 0>; /* gpio PH1 */
        power-gpios = <&gpio 155 0>; /* gpio PT3 */
        bus-width = <8>;
    };

  - |
    #include <dt-bindings/clock/tegra210-car.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    sdhci@700b0000 {
        compatible = "nvidia,tegra210-sdhci";
        reg = <0x0 0x700b0000 0x0 0x200>;
        interrupts = <GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH>;
        clocks = <&tegra_car TEGRA210_CLK_SDMMC1>;
        clock-names = "sdhci";
        resets = <&tegra_car 14>;
        reset-names = "sdhci";
        pinctrl-names = "sdmmc-3v3", "sdmmc-1v8";
        pinctrl-0 = <&sdmmc1_3v3>;
        pinctrl-1 = <&sdmmc1_1v8>;
        nvidia,pad-autocal-pull-up-offset-3v3 = <0x00>;
        nvidia,pad-autocal-pull-down-offset-3v3 = <0x7d>;
        nvidia,pad-autocal-pull-up-offset-1v8 = <0x7b>;
        nvidia,pad-autocal-pull-down-offset-1v8 = <0x7b>;
        status = "disabled";
    };
