# SPDX-License-Identifier: GPL-2.0-only
%YAML 1.2
---
$id: http://devicetree.org/schemas/regulator/ti,palmas-pmic.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Texas Instruments Palmas family of PMICs regulator IP block

maintainers:
  - Mark Brown <broonie@kernel.org>

description: |
  The TPS659038 for the AM57x class have OTP spins that have different part numbers but the same
  functionality. There is not a need to add the OTP spins to the Palmas driver. The spin devices
  should use the TPS659038 as it's compatible value.

  This is the list of those devices: tps659037

definitions:
  regulator:
    type: object
    properties:
      ti,warm-reset:
        $ref: /schemas/types.yaml#/definitions/flag
        description: maintain voltage during warm reset

      ti,roof-floor:
        description: This takes as optional argument on platform supporting the rail from
          desired external control. If there is no argument then it will be assume that it is
          controlled by NSLEEP pin.
        oneOf:
          - $ref: /schemas/types.yaml#/definitions/flag
          - $ref: /schemas/types.yaml#/definitions/uint32
            # oneOf:
            #   - description: ENABLE1 pin
            #     const: 1
            #   - description: ENABLE2 pin
            #     const: 2
            #   - description: NSLEEP pin
            #     const: 3

      ti,mode-sleep:
        $ref: /schemas/types.yaml#/definitions/uint32
        description: Mode to adopt in PMIC sleep.
        # oneOf:
        #   - description: off
        #     const: 0
        #   - description: auto
        #     const: 1
        #   - description: ECO
        #     const: 2
        #   - description: forced PWM
        #     const: 3

      ti,smps-range:
        $ref: /schemas/types.yaml#/definitions/uint32
        description: OTP has the wrong range set for the hardware so override
        # oneOf:
        #   - description: low range
        #     const: 0
        #   - description: high range
        #     const: 1

properties:
  compatible:
    items:
      - enum:
          - ti,twl6035-pmic
          - ti,twl6036-pmic
          - ti,twl6037-pmic
          - ti,tps65913-pmic
          - ti,tps65914-pmic
          - ti,tps65917-pmic
          - ti,tps659038-pmic
      - const: ti,palmas-pmic

  interrupts:
    maxItems: 1

  ti,ldo6-vibrator:
    $ref: /schemas/types.yaml#/definitions/flag
    description: Specifies whether LDO6 is in vibrator mode or not.

  regulators:
    type: object
    description: |
      Must contain a sub-node per regulator from the list below. Each sub-node should contain the
      constraints and initialization information for that regulator. See regulator.txt for a
      description of standard properties for these sub-nodes. Additional custom properties are
      listed below.

    patternProperties:
      "^smps(12|123|3|34|457|6|7|8|9|10_out1|10_out2)$":
        $ref: "#/definitions/regulator"

      "^ldo[1-9]|ldoln|ldousb$":
        $ref: "#/definitions/regulator"

patternProperties:
  "^smps([1-9]|12|123|45|10|10-out[12])-in-supply$":
    description: Input supply for the corresponding SMPS regulator.

  "^ldo([1-9]|ln|rtc|usb)-in-supply$":
    description: Input supply for the corresponding LDO regulator.

additionalProperties: false

required:
  - compatible

examples:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>

    pmic {
      compatible = "ti,twl6035-pmic", "ti,palmas-pmic";
      interrupt-parent = <&palmas>;
      interrupts = <14 IRQ_TYPE_NONE>;

      ti,ldo6-vibrator;

      ti,system-power-controller;

      regulators {
        smps12_reg: smps12 {
          regulator-name = "smps12";
          regulator-min-microvolt = < 600000>;
          regulator-max-microvolt = <1500000>;
          regulator-always-on;
          regulator-boot-on;
          ti,warm-reset;
          ti,roof-floor = <1>; /* ENABLE1 control */
          ti,mode-sleep = <0>;
          ti,smps-range = <1>;
        };

        ldo1_reg: ldo1 {
          regulator-name = "ldo1";
          regulator-min-microvolt = <2800000>;
          regulator-max-microvolt = <2800000>;
        };
      };
    };
